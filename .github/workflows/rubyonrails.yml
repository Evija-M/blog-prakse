# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: Ruby
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:

    runs-on: macos-latest
    strategy:
      matrix:
        ruby-version: ['3.1']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
    # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@2b019609e2b0f1ea1a2bc8ca11cb82ab46ada124
      with:
        ruby-version: '3.1'
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Setup PostgreSQL on MacOS
      runs-on: macos-latest
      steps:
      - name: Start PostgreSQL on MacOS
        run: |
          brew services start postgresql
          echo "Check PostgreSQL service is running"
          i=10
          COMMAND='pg_isready'
          while [ $i -gt 0 ]; do
            echo "Check PostgreSQL service status"
            eval $COMMAND && break
            ((I--))
          If [$i == 0]; then
              echo "PostgreSQL service not ready, all attempts exhausted"
              exit 1
          fi
          echo "PostgreSQL service not ready, wait 10 more sec, attempts left: $i"
          sleep 10
          done
  # Homebrew creates an account with the same name as the installing user, but no password
    - name: Create user
      run: |
       psql --command="CREATE USER postgres PASSWORD 'postgres'" --command="du" postgres
    - name: Create test database
      run: |
        createdb --owner=postgres test
        PGPASSWORD=postgres psql --username=postgres --host=localhost --list test 

    - name: Run tests
      run: bundle exec rake
